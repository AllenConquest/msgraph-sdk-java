// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.Call;
import com.microsoft.graph.models.extensions.MediaConfig;
import com.microsoft.graph.models.generated.Modality;
import com.microsoft.graph.models.extensions.CancelMediaProcessingOperation;
import com.microsoft.graph.models.generated.ScreenSharingRole;
import com.microsoft.graph.models.extensions.MuteParticipantOperation;
import com.microsoft.graph.models.extensions.Prompt;
import com.microsoft.graph.models.extensions.PlayPromptOperation;
import com.microsoft.graph.models.extensions.RecordOperation;
import com.microsoft.graph.models.extensions.InvitationParticipantInfo;
import com.microsoft.graph.models.generated.RejectReason;
import com.microsoft.graph.models.extensions.SubscribeToToneOperation;
import com.microsoft.graph.models.extensions.UnmuteParticipantOperation;
import com.microsoft.graph.models.generated.RecordingStatus;
import com.microsoft.graph.models.extensions.UpdateRecordingStatusOperation;
import com.microsoft.graph.models.extensions.TeleconferenceDeviceQuality;
import com.microsoft.graph.requests.extensions.CommsOperationCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.CommsOperationRequestBuilder;
import com.microsoft.graph.requests.extensions.ParticipantCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ParticipantRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Call Request Builder.
 */
public class CallRequestBuilder extends BaseRequestBuilder<Call> {

    /**
     * The request builder for the Call
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public CallRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the CallRequest instance
     */
    @Nonnull
    public CallRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the CallRequest instance
     */
    @Nonnull
    public CallRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.CallRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the CommsOperation collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public CommsOperationCollectionRequestBuilder operations() {
        return new CommsOperationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("operations"), getClient(), null);
    }

    /**
     * Gets a request builder for the CommsOperation item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public CommsOperationRequestBuilder operations(@Nonnull final String id) {
        return new CommsOperationRequestBuilder(getRequestUrlWithAdditionalSegment("operations") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the Participant collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ParticipantCollectionRequestBuilder participants() {
        return new ParticipantCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("participants"), getClient(), null);
    }

    /**
     * Gets a request builder for the Participant item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ParticipantRequestBuilder participants(@Nonnull final String id) {
        return new ParticipantRequestBuilder(getRequestUrlWithAdditionalSegment("participants") + "/" + id, getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param callbackUri the callbackUri
     * @param mediaConfig the mediaConfig
     * @param acceptedModalities the acceptedModalities
     */
    @Nonnull
    public CallAnswerRequestBuilder answer(@Nullable final String callbackUri, @Nullable final MediaConfig mediaConfig, @Nullable final java.util.List<Modality> acceptedModalities) {
        return new CallAnswerRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.answer"), getClient(), null, callbackUri, mediaConfig, acceptedModalities);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param clientContext the clientContext
     */
    @Nonnull
    public CallCancelMediaProcessingRequestBuilder cancelMediaProcessing(@Nullable final String clientContext) {
        return new CallCancelMediaProcessingRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.cancelMediaProcessing"), getClient(), null, clientContext);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param role the role
     */
    @Nonnull
    public CallChangeScreenSharingRoleRequestBuilder changeScreenSharingRole(@Nullable final ScreenSharingRole role) {
        return new CallChangeScreenSharingRoleRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.changeScreenSharingRole"), getClient(), null, role);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     */
    @Nonnull
    public CallKeepAliveRequestBuilder keepAlive() {
        return new CallKeepAliveRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.keepAlive"), getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param clientContext the clientContext
     */
    @Nonnull
    public CallMuteRequestBuilder mute(@Nullable final String clientContext) {
        return new CallMuteRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.mute"), getClient(), null, clientContext);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param prompts the prompts
     * @param clientContext the clientContext
     */
    @Nonnull
    public CallPlayPromptRequestBuilder playPrompt(@Nullable final java.util.List<Prompt> prompts, @Nullable final String clientContext) {
        return new CallPlayPromptRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.playPrompt"), getClient(), null, prompts, clientContext);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param prompts the prompts
     * @param bargeInAllowed the bargeInAllowed
     * @param initialSilenceTimeoutInSeconds the initialSilenceTimeoutInSeconds
     * @param maxSilenceTimeoutInSeconds the maxSilenceTimeoutInSeconds
     * @param maxRecordDurationInSeconds the maxRecordDurationInSeconds
     * @param playBeep the playBeep
     * @param stopTones the stopTones
     * @param clientContext the clientContext
     */
    @Nonnull
    public CallRecordResponseRequestBuilder recordResponse(@Nullable final java.util.List<Prompt> prompts, @Nullable final Boolean bargeInAllowed, @Nullable final Integer initialSilenceTimeoutInSeconds, @Nullable final Integer maxSilenceTimeoutInSeconds, @Nullable final Integer maxRecordDurationInSeconds, @Nullable final Boolean playBeep, @Nullable final java.util.List<String> stopTones, @Nullable final String clientContext) {
        return new CallRecordResponseRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.recordResponse"), getClient(), null, prompts, bargeInAllowed, initialSilenceTimeoutInSeconds, maxSilenceTimeoutInSeconds, maxRecordDurationInSeconds, playBeep, stopTones, clientContext);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param targets the targets
     * @param timeout the timeout
     * @param callbackUri the callbackUri
     */
    @Nonnull
    public CallRedirectRequestBuilder redirect(@Nullable final java.util.List<InvitationParticipantInfo> targets, @Nullable final Integer timeout, @Nullable final String callbackUri) {
        return new CallRedirectRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.redirect"), getClient(), null, targets, timeout, callbackUri);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param reason the reason
     * @param callbackUri the callbackUri
     */
    @Nonnull
    public CallRejectRequestBuilder reject(@Nullable final RejectReason reason, @Nullable final String callbackUri) {
        return new CallRejectRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.reject"), getClient(), null, reason, callbackUri);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param clientContext the clientContext
     */
    @Nonnull
    public CallSubscribeToToneRequestBuilder subscribeToTone(@Nullable final String clientContext) {
        return new CallSubscribeToToneRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.subscribeToTone"), getClient(), null, clientContext);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param transferTarget the transferTarget
     */
    @Nonnull
    public CallTransferRequestBuilder transfer(@Nullable final InvitationParticipantInfo transferTarget) {
        return new CallTransferRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.transfer"), getClient(), null, transferTarget);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param clientContext the clientContext
     */
    @Nonnull
    public CallUnmuteRequestBuilder unmute(@Nullable final String clientContext) {
        return new CallUnmuteRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.unmute"), getClient(), null, clientContext);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder 
     * @param status the status
     * @param clientContext the clientContext
     */
    @Nonnull
    public CallUpdateRecordingStatusRequestBuilder updateRecordingStatus(@Nullable final RecordingStatus status, @Nullable final String clientContext) {
        return new CallUpdateRecordingStatusRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.updateRecordingStatus"), getClient(), null, status, clientContext);
    }
}
