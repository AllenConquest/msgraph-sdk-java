// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.extensions.DirectoryAudit;
import com.microsoft.graph.models.extensions.RestrictedSignIn;
import com.microsoft.graph.models.extensions.SignIn;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Audit Log Root.
 */
public class AuditLogRoot extends Entity implements IJsonBackedObject {


    /**
     * The Directory Audits.
     * Read-only. Nullable.
     */
    @SerializedName(value = "directoryAudits", alternate = {"DirectoryAudits"})
    @Expose
    public BaseCollectionPage<DirectoryAudit> directoryAudits;

    /**
     * The Restricted Sign Ins.
     * 
     */
    @SerializedName(value = "restrictedSignIns", alternate = {"RestrictedSignIns"})
    @Expose
    public BaseCollectionPage<RestrictedSignIn> restrictedSignIns;

    /**
     * The Sign Ins.
     * Read-only. Nullable.
     */
    @SerializedName(value = "signIns", alternate = {"SignIns"})
    @Expose
    public BaseCollectionPage<SignIn> signIns;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
	@Override
    public ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("directoryAudits")) {
            directoryAudits = serializer.deserializeObject(json.get("directoryAudits").toString(), new BaseCollectionPage<DirectoryAudit>(new java.util.ArrayList<DirectoryAudit>(), null).getClass());
        }

        if (json.has("restrictedSignIns")) {
            restrictedSignIns = serializer.deserializeObject(json.get("restrictedSignIns").toString(), new BaseCollectionPage<RestrictedSignIn>(new java.util.ArrayList<RestrictedSignIn>(), null).getClass());
        }

        if (json.has("signIns")) {
            signIns = serializer.deserializeObject(json.get("signIns").toString(), new BaseCollectionPage<SignIn>(new java.util.ArrayList<SignIn>(), null).getClass());
        }
    }
}
